{"version":3,"sources":["redux/reducers/contacts.js","redux/reducers/filter.js","redux/store/index.js","Components/ContactForm/ContactForm.styles.js","Components/ContactForm/ContactForm.js","Containers/ContactsFormContainer.js","Components/ContactItem/ContactItem.styles.js","Components/ContactItem/ContactItem.jsx","Containers/ContactItemContainer.js","Components/ContactList/ContactList.styles.js","Components/ContactList/ContactList.jsx","Containers/ContactListContainer.js","Components/Filter/Filter.styles.js","Components/Filter/Filter.jsx","Containers/FilterContainer.js","Components/Phonebook/Phonebook.styles.js","Components/Phonebook/Phonebook.js","helpers/storage.js","Containers/PhonebookContainer.js","App.js","index.js"],"names":["arrContactsSlice","createSlice","name","initialState","reducers","add","state","payload","remove","filter","contact","id","show","actions","contactsState","contacts","filterName","changeFilter","filterState","rootReducer","globalState","configureStore","reducer","devTools","process","Form","styled","form","Label","label","Input","input","Button","button","Message","transition","div","attrs","unmountOnExit","timeout","ContactForm","number","onSubmit","onChange","disabledAlert","alert","htmlFor","type","value","autoFocus","disabled","in","onEntered","formInitialState","toast","configure","ContactFormContainer","notify","field","error","notifyAlert","is","success","useState","setForm","setAlert","dispatch","useDispatch","useSelector","e","preventDefault","uuidv4","find","el","length","target","replace","exec","Name","span","Number","ContactItem","onDelete","Wrap","onClick","propTypes","PropTypes","shape","string","isRequired","onDeleteContact","func","ContactItemContainer","List","ul","Item","li","ContactList","filteredArr","TransitionGroup","component","map","key","ContactListContainer","toLowerCase","includes","filteredContacts","InputFilter","Subtitle","h2","Filter","showFilter","bool","FilterContainer","Title","h1","Phonebook","visibleLogo","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","PhonebookContainer","setVisibleLogo","useEffect","contactsData","storage","App","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.dfbb558f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst arrContactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: [],\n  reducers: {\n    add: (state, { payload }) => [...state, payload],\n    remove: (state, { payload }) =>\n      state.filter((contact) => contact.id !== payload),\n    show: (state, { payload }) => [...state, ...payload],\n  },\n});\n\nexport const { add, remove, show } = arrContactsSlice.actions;\n\nexport const contactsState = (state) => state.contacts;\n\nexport default arrContactsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst filterName = createSlice({\n  name: \"filter\",\n  initialState: \"\",\n  reducers: {\n    changeFilter: (state, { payload }) => (state = payload),\n  },\n});\n\nexport const { changeFilter } = filterName.actions;\n\nexport const filterState = (state) => state.filter;\n\nexport default filterName.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contacts from \"../reducers/contacts\";\nimport filter from \"../reducers/filter\";\n\nconst rootReducer = {\n  contacts,\n  filter,\n};\n\nconst globalState = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== \"production\",\n});\nexport default globalState;\n","import styled from \"styled-components\";\nimport transition from \"styled-transition-group\";\n\nexport const Form = styled.form`\n  width: 500px;\n  position: relative;\n  width: 19.5em;\n  box-shadow: 0px 1px 3px 0px rgba(50, 50, 50, 0.5);\n  width: 300px;\n  padding: 10px;\n  border-radius: 2px;\n`;\nexport const Label = styled.label``;\nexport const Input = styled.input`\n  display: block;\n  margin-top: 0.5em;\n  border-radius: 3px;\n  font-size: 18px;\n  font-weight: 500;\n  border: 1px solid #a9a9a9;\n  width: 100%;\n`;\nexport const Button = styled.button`\n  margin-top: 0.5em;\n  width: 100%;\n  border-radius: 3px;\n  border: none;\n  box-shadow: 0px 2px 3px 0px rgba(50, 50, 50, 0.5);\n  color: white;\n  height: 30px;\n  font-size: 1em;\n  background-color: #2a3693;\n  :hover {\n    background-color: #242f7f;\n  }\n`;\nexport const Message = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 3500,\n})`\n  background: #c6180c;\n  width:220px;\n  height: 40px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  display: flex;\n  font-weight: 500;\n  border-radius:8px;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  span{\n    color:#fff;\n  }\n\n  &:enter {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 250ms ease-in, transform 250ms ease-in;\n  }\n  &:exit {\n    opacity: 1;\n    transform: translateX(0);\n  }\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(100%);\n    transition: opacity 250ms ease-in .3s, transform 250ms ease-in .3s;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Message, Form, Label, Input, Button } from \"./ContactForm.styles\";\n\nconst ContactForm = ({\n  name,\n  number,\n  onSubmit,\n  onChange,\n  disabledAlert,\n  alert,\n}) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onChange}\n          autoFocus\n        />\n      </Label>\n      <Label htmlFor=\"number\">\n        Number\n        <Input type=\"text\" name=\"number\" value={number} onChange={onChange} />\n      </Label>\n      <Button type=\"submit\" disabled={!name || !number}>\n        Add Contact\n      </Button>\n      <Message in={alert} onEntered={disabledAlert}>\n        <span>Contact is already exist</span>\n      </Message>\n    </Form>\n  );\n};\nContactForm.propTypes = {\n  number: PropTypes.string,\n  name: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  disabledAlert: PropTypes.func,\n  alert: PropTypes.bool,\n};\n\nexport default ContactForm;\n","import React, { useState } from \"react\";\nimport { v1 as uuidv4 } from \"uuid\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { add } from \"../redux/reducers/contacts\";\nimport { contactsState } from \"../redux/reducers/contacts\";\n\nimport ContactForm from \"../Components/ContactForm/ContactForm\";\n\nconst formInitialState = {\n  name: \"\",\n  number: \"\",\n};\n\ntoast.configure();\n\nconst ContactFormContainer = () => {\n  const notify = (field) => toast.error(`💩 Contact ${field} is too short!`);\n  const notifyAlert = (is) => toast.success(`Please enter only ${is}`);\n  const [form, setForm] = useState(formInitialState);\n  const [alert, setAlert] = useState(false);\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsState);\n  const inputHandler = (e) => {\n    const name = e.target.name;\n    let value = \"\";\n    if (name === \"name\") {\n      value = e.target.value.replace(/[^A-zА-яЁё\\s]+/gi, \"\");\n\n      const numbersCheck = /\\d+/g;\n      if (numbersCheck.exec(e.target.value)) {\n        notifyAlert(\"letters\");\n      }\n    }\n    if (name === \"number\") {\n      value = e.target.value.replace(/[^\\d\\s,+,-,(,)]+/gi, \"\");\n      const lettersCheck = /[A-zА-яЁё]+/g;\n      if (lettersCheck.exec(e.target.value)) {\n        notifyAlert(\"numbers\");\n      }\n    }\n    setForm({ ...form, [name]: value });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { name, number } = form;\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    const isExistName = contacts.find((el) => el.name === contact.name);\n    if (isExistName) {\n      setAlert(true);\n      return;\n    }\n\n    if (contact.name.length <= 1) {\n      notify(\"name\");\n      return;\n    } else if (contact.number.length <= 1) {\n      notify(\"number\");\n      return;\n    }\n\n    dispatch(add(contact));\n    setForm(formInitialState);\n  };\n  const disabledAlert = () => {\n    setAlert(false);\n  };\n  const { name, number } = form;\n  return (\n    <ContactForm\n      name={name}\n      number={number}\n      onSubmit={submitHandler}\n      onChange={inputHandler}\n      disabledAlert={disabledAlert}\n      alert={alert}\n    />\n  );\n};\n\nexport default ContactFormContainer;\n","import styled from \"styled-components\";\n\nexport const Name = styled.span`\n  margin: 0;\n  width: 7em;\n`;\nexport const Number = styled.span`\n  margin: 0;\n  width: 10em;\n`;\nexport const Button = styled.button`\n  height: 2.5em;\n  width: 2.5em;\n  border: none;\n  background-color: #f2392d;\n  border-radius: 4px;\n  position: relative;\n  padding: 0;\n  cursor: pointer;\n  :hover {\n    background-color: #c6180c;\n    transition: background-color 0.2s ease-in-out;\n  }\n  :after {\n    content: \"\";\n    display: block;\n    height: 1.5em;\n    width: 4px;\n    border-radius: 50px;\n    background-color: #fff;\n    transform: rotate(45deg);\n    position: absolute;\n    top: 0.5em;\n    left: 1.1em;\n  }\n  :before {\n    content: \"\";\n    display: block;\n    height: 1.5em;\n    width: 4px;\n    border-radius: 50px;\n    background-color: #fff;\n    transform: rotate(-45deg);\n    position: absolute;\n    top: 0.5em;\n    left: 1.1em;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Name, Number, Wrrap } from \"./ContactItem.styles\";\n\nconst ContactItem = ({ name, number, onDelete, Wrap }) => {\n  return (\n    <>\n      <Name>{name} :</Name>\n      <Number> {number}</Number>\n      <Button onClick={onDelete}></Button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { remove } from \"../redux/reducers/contacts\";\nimport { useDispatch } from \"react-redux\";\n\nimport ContactItem from \"../Components/ContactItem/ContactItem\";\n\nconst ContactItemContainer = ({ contact }) => {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n  const onDelete = () => {\n    dispatch(remove(id));\n  };\n  return <ContactItem onDelete={onDelete} name={name} number={number} />;\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    contact: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactItemContainer;\n","import styled from \"styled-components\";\nimport transition from \"styled-transition-group\";\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\nexport const Item = transition.li.attrs({\n  unmountOnExit: true,\n  timeout: 500,\n})`\ndisplay: flex;\nalign-items: center;\nmargin: 0;\npadding: 10px;\nfont-weight: 500;\nmax-width: 300px;\nbox-shadow: 0px 2px 3px 0px rgba(50, 50, 50, 0.5);\nborder-radius: 2px;\n&:enter { \n  opacity: 0;\n  transform: translateX(-100%); \n}\n&:enter-active {\n  opacity: 1;\n  transform: translateX(0);\n  transition: opacity 250ms ease-in, transform 250ms ease-in;\n}\n&:exit { \n  opacity: 1;\n  transform: translateX(0);\n}\n&:exit-active {\n  opacity: 0;\n  transform: translateX(-100%);\n  transition: opacity 250ms ease-in, transform 250ms ease-in;\n}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ContactItemContainer from \"../../Containers/ContactItemContainer\";\n\nimport { List, Item } from \"./ContactList.styles\";\nimport { TransitionGroup } from \"react-transition-group\";\n\nconst ContactList = ({ filteredArr }) => {\n  return (\n    <TransitionGroup component={List}>\n      {filteredArr.map((contact) => (\n        <Item key={contact.id}>\n          <ContactItemContainer contact={contact} />\n        </Item>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  filteredArr: PropTypes.array,\n};\n\nexport default ContactList;\n","import React from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { contactsState } from \"../redux/reducers/contacts\";\nimport { filterState } from \"../redux/reducers/filter\";\n\nimport ContactList from \"../Components/ContactList/ContactList\";\n\nconst ContactListContainer = () => {\n  const contacts = useSelector(contactsState);\n  const filter = useSelector(filterState);\n\n  const filteredContacts = (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const filteredArr = filteredContacts(contacts, filter);\n\n  return <ContactList filteredArr={filteredArr} />;\n};\n\nexport default ContactListContainer;\n","import transition from \"styled-transition-group\";\nimport styled from \"styled-components\";\n\nexport const InputFilter = styled.input`\n  border-radius: 3px;\n  font-size: 18px;\n  font-weight: 500;\n  border: 1px solid #a9a9a9;\n  width: 100%;\n`;\n\nexport const Subtitle = styled.h2`\n  font-weight: 400;\n  font-size: 1em;\n  margin: 0;\n  padding-bottom: 5px;\n`;\nexport const Wrap = transition.div.attrs({\n  unmountOnExit: true,\n  timeout: 250,\n})`\nwidth: 19.5em;\nbox-shadow: 0px 1px 3px 0px rgba(50, 50, 50, 0.5);\nwidth: 300px;\npadding: 10px;\nborder-radius: 2px;\n&:enter { \n  opacity: 0;\n  transform: translateX(-100%); \n}\n&:enter-active {\n  opacity: 1;\n  transform: translateX(0);\n  transition: opacity 250ms ease-in, transform 250ms ease-in;\n}\n&:exit { \n  opacity: 1;\n  transform: translateX(0);\n}\n&:exit-active {\n  opacity: 0;\n  transform: translateX(-100%);\n  transition: opacity 250ms ease-in, transform 250ms ease-in;\n}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { InputFilter, Wrap, Subtitle } from \"./Filter.styles\";\n\nconst Filter = ({ showFilter, filter, onChange }) => {\n  return (\n    <Wrap in={showFilter}>\n      <Subtitle>Find contacts by name</Subtitle>\n      <InputFilter\n        type=\"text\"\n        value={filter}\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </Wrap>\n  );\n};\n\nFilter.propTypes = {\n  showFilter: PropTypes.bool,\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../redux/reducers/filter\";\nimport { filterState } from \"../redux/reducers/filter\";\n\nimport Filter from \"../Components/Filter/Filter\";\n\nconst FilterContainer = ({ showFilter }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(filterState);\n  const handleChange = (target) => {\n    dispatch(changeFilter(target));\n  };\n  return (\n    <Filter showFilter={showFilter} filter={filter} onChange={handleChange} />\n  );\n};\n\nFilter.propTypes = {\n  showFilter: PropTypes.bool,\n};\n\nexport default FilterContainer;\n","import transition from \"styled-transition-group\";\n\nexport const Title = transition.h1.attrs({\n  unmountOnExit: true,\n  timeout: 500,\n})`\ncolor: #3645ab;\nmargin:0;\n  &:enter { opacity: 0.01; }\n  &:enter-active {\n    opacity: 1;\n    transition: opacity 500ms ease-in;\n  }\n  &:exit { opacity: 1; }\n  &:exit-active {\n    opacity: 0.01;\n    transition: opacity 500ms ease-in;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ContactFormContainer from \"../../Containers/ContactsFormContainer\";\nimport ContactListContainer from \"../../Containers/ContactListContainer\";\nimport FilterContainer from \"../../Containers/FilterContainer\";\n\nimport { Title } from \"./Phonebook.styles\";\n\nconst Phonebook = ({ showFilter, visibleLogo }) => (\n  <>\n    <Title in={visibleLogo}>Phonebook</Title>\n    <ContactFormContainer />\n    <FilterContainer showFilter={showFilter} />\n    <ContactListContainer />\n  </>\n);\n\nPhonebook.propTypes = {\n  showFilter: PropTypes.bool,\n  visibleLogo: PropTypes.bool,\n};\n\nexport default Phonebook;\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    throw new Error();\n  }\n};\nconst get = (key) => {\n  try {\n    const items = localStorage.getItem(key);\n    return items ? JSON.parse(items) : null;\n  } catch (err) {\n    throw new Error();\n  }\n};\nexport default {\n  save,\n  get,\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { show } from \"../redux/reducers/contacts\";\nimport { contactsState } from \"../redux/reducers/contacts\";\n\nimport Phonebook from \"../Components/Phonebook/Phonebook\";\nimport storage from \"../helpers/storage\";\n\nconst PhonebookContainer = () => {\n  const contacts = useSelector(contactsState);\n  const dispatch = useDispatch();\n  const [visibleLogo, setVisibleLogo] = useState(false);\n\n  useEffect(() => {\n    setVisibleLogo(true);\n    const contactsData = storage.get(\"contacts\");\n    if (!contactsData) {\n      storage.save(\"contacts\", []);\n      return;\n    }\n    dispatch(show(contactsData));\n  }, [dispatch]);\n\n  useEffect(() => {\n    storage.save(\"contacts\", contacts);\n  }, [contacts]);\n\n  return (\n    <Phonebook visibleLogo={visibleLogo} showFilter={contacts.length >= 2} />\n  );\n};\n\nexport default PhonebookContainer;\n","import React from \"react\";\nimport PhonebookContainer from \"./Containers/PhonebookContainer\";\nfunction App() {\n  return <PhonebookContainer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport globalState from \"./redux/store\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={globalState}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}